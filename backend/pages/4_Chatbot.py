import streamlit as st
import pandas as pd
from streamlit_chat import message
import os

def check_login():
    if "login_status" not in st.session_state or not st.session_state.login_status:
        st.warning("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤ Login ‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏≠‡∏∑‡πà‡∏ô")
        st.session_state.current_page = "Login"
        st.switch_page("pages/1_Login.py")

# ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö messages
st.session_state.setdefault('past', [])
st.session_state.setdefault('generated', [])

# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ
UPLOAD_FOLDER = 'uploads'
os.makedirs(UPLOAD_FOLDER, exist_ok=True)

CSV_FILE = 'backend/names.csv'
def change_colors():
    style = """
        <style>
            # #upload-parcel-image {
            #     color: #333366;  /* ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏µ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏≥‡∏ß‡πà‡∏≤ Login */
            # }
            .st-emotion-cache-bm2z3a {
                background-color: #f0f0f0;  /* ‡∏™‡∏µ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á */
            }
            .st-emotion-cache-h4xjwg{
                background-color: #ff5f5f;  /* ‡∏™‡∏µheader */
            }
            st-emotion-cache-1dp5vir{
                background-color: #ff5f5f;  /* header */
            }
            .stText {
                color: #333366;  /* ‡∏™‡∏µ‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£ */
            }
            .st-emotion-cache-1erivf3{
                background-color: #333366;  /* ‡∏™‡∏µ upload */
            }
            st-emotion-cache-15hul6a{
                background-color: #333366;  /* ‡∏™‡∏µ upload */
            }
            .stButton>button {
                background-color: #f9e75e;  /*  */
                color: #333366;  /* ‡∏™‡∏µ‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡πÉ‡∏ô‡∏õ‡∏∏‡πà‡∏° */
            }
            .stButton>button:hover {
                background-color: #f9e75e;  /* ‡∏™‡∏µ‡∏Ç‡∏≠‡∏á‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ä‡∏µ‡πâ‡πÄ‡∏°‡∏≤‡∏™‡πå */
            }
        
        </style>
    """
    st.markdown(style, unsafe_allow_html=True)

def chat():
    change_colors()
    check_login() 

    # ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÉ‡∏ô CSV
    def check_question_in_csv(question):
        try:
            df = pd.read_csv(CSV_FILE)
            return question in df['name'].values
        except Exception as e:
            st.error(f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå CSV: {e}")
            return False
    
    # ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°
    def handle_chat(question):
        if question:
            if check_question_in_csv(question):
                return f"‚úÖ ‡∏û‡∏±‡∏™‡∏î‡∏∏‡∏Ç‡∏≠‡∏á {question} ‡∏°‡∏≤‡∏ñ‡∏∂‡∏á‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡∏£‡∏±‡∏ö"
            else:
                return f"‚ùå ‡∏û‡∏±‡∏™‡∏î‡∏∏‡∏Ç‡∏≠‡∏á {question} ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏≤‡∏ñ‡∏∂‡∏á‡∏Ñ‡∏£‡∏±‡∏ö"
        return "üö´ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö‡∏û‡∏±‡∏™‡∏î‡∏∏"
    
    # ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
    def on_input_change():
        user_input = st.session_state.user_input
        if user_input:
            st.session_state.past.append(user_input)
            answer = handle_chat(user_input)
            st.session_state.generated.append(answer)
            st.session_state.user_input = ""

    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ session_state
    if 'past' not in st.session_state:
        st.session_state['past'] = []

    if 'generated' not in st.session_state:
        st.session_state['generated'] = []

    # ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏ô container
    chat_placeholder = st.empty()

    # ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
    with chat_placeholder.container():
        for i in range(len(st.session_state['generated'])):
            message(st.session_state['past'][i], is_user=True, key=f"user_{i}")
            message(st.session_state['generated'][i], key=f"bot_{i}")

    # ‡∏ä‡πà‡∏≠‡∏á‡∏õ‡πâ‡∏≠‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
    st.text_input("‡πÉ‡∏™‡πà‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö‡∏û‡∏±‡∏™‡∏î‡∏∏ :", on_change=on_input_change, key="user_input")

if __name__ == "__main__":
    chat()
